[{"/home/bzweb/projects/custom/mindful/frontend/src/index.js":"1","/home/bzweb/projects/custom/mindful/frontend/src/App.js":"2","/home/bzweb/projects/custom/mindful/frontend/src/reportWebVitals.js":"3","/home/bzweb/projects/custom/mindful/frontend/src/services/userService.js":"4","/home/bzweb/projects/custom/mindful/frontend/src/contexts/UserContext.js":"5","/home/bzweb/projects/custom/mindful/frontend/src/components/Welcome.js":"6","/home/bzweb/projects/custom/mindful/frontend/src/components/Terms.js":"7","/home/bzweb/projects/custom/mindful/frontend/src/reducers/userReducer.js":"8","/home/bzweb/projects/custom/mindful/frontend/src/modules/entries.js":"9","/home/bzweb/projects/custom/mindful/frontend/src/components/LogoutButton.js":"10","/home/bzweb/projects/custom/mindful/frontend/src/components/Login.js":"11","/home/bzweb/projects/custom/mindful/frontend/src/components/CreateUser.js":"12","/home/bzweb/projects/custom/mindful/frontend/src/components/Settings.js":"13","/home/bzweb/projects/custom/mindful/frontend/src/components/dashboard/RecApps.js":"14","/home/bzweb/projects/custom/mindful/frontend/src/components/dashboard/RecVideos.js":"15","/home/bzweb/projects/custom/mindful/frontend/src/components/dashboard/Timer.js":"16","/home/bzweb/projects/custom/mindful/frontend/src/components/dashboard/Info.js":"17","/home/bzweb/projects/custom/mindful/frontend/src/components/dashboard/Dashboard.js":"18","/home/bzweb/projects/custom/mindful/frontend/src/components/dashboard/EntryForm.js":"19","/home/bzweb/projects/custom/mindful/frontend/src/components/dashboard/Entry.js":"20","/home/bzweb/projects/custom/mindful/frontend/src/components/dashboard/Modal.js":"21"},{"size":500,"mtime":1611339876104,"results":"22","hashOfConfig":"23"},{"size":1563,"mtime":1613091228489,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1611339876104,"results":"25","hashOfConfig":"23"},{"size":1850,"mtime":1613091218049,"results":"26","hashOfConfig":"23"},{"size":2388,"mtime":1613090926941,"results":"27","hashOfConfig":"23"},{"size":1248,"mtime":1612558825144,"results":"28","hashOfConfig":"23"},{"size":2478,"mtime":1613014991053,"results":"29","hashOfConfig":"23"},{"size":1148,"mtime":1612905601792,"results":"30","hashOfConfig":"23"},{"size":2764,"mtime":1612326986598,"results":"31","hashOfConfig":"23"},{"size":433,"mtime":1611958150457,"results":"32","hashOfConfig":"23"},{"size":3028,"mtime":1613090347205,"results":"33","hashOfConfig":"23"},{"size":5466,"mtime":1613091004677,"results":"34","hashOfConfig":"23"},{"size":2937,"mtime":1612754352127,"results":"35","hashOfConfig":"23"},{"size":2973,"mtime":1612996121662,"results":"36","hashOfConfig":"23"},{"size":4389,"mtime":1612909842540,"results":"37","hashOfConfig":"23"},{"size":4192,"mtime":1612909872352,"results":"38","hashOfConfig":"23"},{"size":3150,"mtime":1612909785968,"results":"39","hashOfConfig":"23"},{"size":5297,"mtime":1612994476880,"results":"40","hashOfConfig":"23"},{"size":2753,"mtime":1612909733388,"results":"41","hashOfConfig":"23"},{"size":248,"mtime":1612909726268,"results":"42","hashOfConfig":"23"},{"size":2145,"mtime":1612910065316,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"5x91ro",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/home/bzweb/projects/custom/mindful/frontend/src/index.js",[],["94","95"],"/home/bzweb/projects/custom/mindful/frontend/src/App.js",["96"],"import  React from 'react';\nimport { HashRouter, BrowserRouter, Route, } from 'react-router-dom';\nimport UserContextProvider from './contexts/UserContext';\n\nimport Welcome from './components/Welcome';\nimport CreateUser from './components/CreateUser';\nimport Terms from './components/Terms';\nimport LogoutButton from './components/LogoutButton';\nimport Settings from './components/Settings';\n\nimport Dashboard from './components/dashboard/Dashboard';\nimport RecVideos from './components/dashboard/RecVideos';\nimport RecApps from './components/dashboard/RecApps';\nimport Timer from './components/dashboard/Timer';\nimport EntryForm from './components/dashboard/EntryForm';\nimport Info from './components/dashboard/Info';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <UserContextProvider>\n          <LogoutButton />\n\n          <Route exact path=\"/\" component={Welcome} />\n          <Route exact path=\"/create\" component={CreateUser} />\n          <Route exact path=\"/terms\" component={Terms} />\n\n          <Route exact path=\"/settings\" component={Settings} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/info\" component={Info} />\n          \n          <Route exact path=\"/videos\" component={RecVideos} />\n          <Route exact path=\"/apps\" component={RecApps} />\n          <Route exact path=\"/timer\" component={Timer} />\n          <Route exact path=\"/entry\" component={EntryForm} />\n        </UserContextProvider>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/bzweb/projects/custom/mindful/frontend/src/reportWebVitals.js",[],"/home/bzweb/projects/custom/mindful/frontend/src/services/userService.js",["97"],"import axios from 'axios';\nconst baseUrl = '/dashboard/user';\n\n// CHECK IF USER EXISTS\nconst check = (userObject) => {\n  const req = axios.post(`${baseUrl}/check`, userObject);\n\n  return req.then(res => res.data)\n    .catch(err => console.error(err));\n}\n\n// CREATE USER\nconst create = userObject => {\n  const req = axios.post(`${baseUrl}/create`, userObject);\n\n  return req.then(res => res.data)\n    .catch(err => console.error(err));\n}\n\n// LOGIN\nconst login = userObject => {\n  const req = axios.post(`${baseUrl}/login`, userObject);\n\n  return req.then(res => res.data)\n    .catch(err => console.error(err));\n}\n\n// GET USER INFO (not yet used)\nconst getUserInfo = (userId, token) => {\n  const req = axios.get(`${baseUrl}/${userId}`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n\n  return req.then(res => res.data)\n    .catch(err => console.error(err));\n}\n\n// COMPLETE ENTRY\nconst completeEntry = (userObject, userId, token) => {\n  const req = axios.put(`${baseUrl}/${userId}/entry`, userObject, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n\n  return req.then(res => res.data)\n    .catch(err => console.error(err));\n}\n\n// DELETE USER ON POLICY REJECTION\nconst removeUserOnReject = (userObject, token) => {\n  const req = axios.delete(`${baseUrl}/${userObject._id}/reject`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n\n  return req.then(res => res.data)\n    .catch(err => console.error(err));\n}\n\n// DELETE USER\nconst removeUser = (userObject, token) => {\n  const req = axios.delete(`${baseUrl}/${userObject._id}`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n\n  return req.then(res => res.data)\n    .catch(err => console.error(err));\n}\n\nexport default {\n  check,\n  create,\n  login,\n  getUserInfo,\n  completeEntry,\n  removeUserOnReject,\n  removeUser\n}\n","/home/bzweb/projects/custom/mindful/frontend/src/contexts/UserContext.js",["98"],"import React, { useState, useReducer, createContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport userReducer from '../reducers/userReducer';\nimport userService from '../services/userService';\n\nexport const UserContext = createContext();\n\nconst UserContextProvider = (props) => {\n  const [user, dispatch] = useReducer(userReducer, [], () => {\n    const storedUser = localStorage.getItem('my-user');\n    return storedUser\n      ? JSON.parse(storedUser)\n      : {};\n  });\n\n  useEffect(() => {\n    localStorage.setItem('my-user', JSON.stringify(user));\n  }, [user]);\n\n  const [link, setLink] = useState({ dest: '' });\n\n  const setDest = req => {\n    setLink({\n      ...link,\n      dest: req\n    });\n  }\n\n  const createUser = async (userObj) => {\n    await userService.create(userObj)\n      .then(res => {\n        console.log('res', res);\n\n        dispatch({ type: 'CREATE_USER', user: {\n          email: res.email,\n          password: res.password,\n          _id: res._id,\n          createToken: res.createToken\n        }});\n\n        return res;\n      })\n      .catch(err => console.error(err));\n  }\n\n  const login = user => {\n    userService.login(user)\n      .then(res => {\n        console.log('res', res);\n        \n        dispatch({ type: 'LOG_IN', user: {\n          name: res.name,\n          email: res.email,\n          entries: res.entries,\n          id: res.id,\n          _id: res._id,\n          accessToken: res.accessToken\n        }});\n\n        return res;\n      })\n      .catch(err => console.error(err));\n  }\n\n  const updateEntries = () => {\n    userService.completeEntry(user, user._id, user.accessToken)\n      .then(res => res)\n      .catch(err => console.error(err));\n  }\n\n  const logout = () => {\n    dispatch({ type: 'LOG_OUT' });\n\n    localStorage.removeItem('my-user');\n  }\n\n  const removeUserOnReject = userObject => {\n    userService.removeUserOnReject(userObject, user.createToken);\n\n    logout();\n  }\n\n  const removeUser = () => {\n    userService.removeUser(user, user.accessToken);\n\n    logout();\n  }\n\n  return (\n    <UserContext.Provider value={{ \n        user, dispatch, \n        link, setLink, \n        setDest, \n        createUser,\n        login, logout,\n        updateEntries, \n        removeUserOnReject,\n        removeUser,\n    }}>\n      {props.children}\n    </UserContext.Provider>\n  )\n}\n\nexport default UserContextProvider;\n","/home/bzweb/projects/custom/mindful/frontend/src/components/Welcome.js",[],"/home/bzweb/projects/custom/mindful/frontend/src/components/Terms.js",[],"/home/bzweb/projects/custom/mindful/frontend/src/reducers/userReducer.js",[],"/home/bzweb/projects/custom/mindful/frontend/src/modules/entries.js",[],["99","100"],"/home/bzweb/projects/custom/mindful/frontend/src/components/LogoutButton.js",[],"/home/bzweb/projects/custom/mindful/frontend/src/components/Login.js",[],"/home/bzweb/projects/custom/mindful/frontend/src/components/CreateUser.js",["101"],"import React, { useState, useContext, useEffect } from 'react';\nimport { Route, Redirect, useHistory } from 'react-router-dom';\nimport { UserContext } from '../contexts/UserContext';\nimport userService from '../services/userService';\n\nconst CreateUser = () => {\n  const { link, setDest, createUser } = useContext(UserContext);\n\n  const history = useHistory();\n\n  const [locationKeys, setLocationKeys] = useState([]);\n\n  useEffect(() => {\n    return history.listen(location => {\n      if (history.action === 'PUSH') {\n        setLocationKeys([ location.key ]);\n      }\n\n      if (history.action === 'POP') {\n        if (locationKeys[1] === location.key) {\n          setLocationKeys(([ _, ...keys]) => keys)\n\n          // handle forward event\n          setDest('login');\n        } else {\n          setLocationKeys((keys) => [ location.key, ...keys ]);\n\n          // handle back event\n          setDest('login');\n        }\n      }\n    });\n  }, [locationKeys]);\n\n  const [account, setAccount] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    created: false, // redirects to privacy policy upon creation\n  });\n\n  const [err, setErr] = useState({ ref: '' });\n\n  if (link.dest === 'login') {\n    return (\n      <Route exact path=\"/create\">\n        <Redirect to=\"/\" />\n      </Route>\n    )\n  }\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setAccount({\n      ...account,\n      [name]: value\n    });\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    // reset error state to blank\n    setErr({\n      ...err,\n      ref: ''\n    });\n\n    // at least one password is left blank\n    if (!account.password.trim() || !account.confirmPassword.trim()) {\n      return setErr({\n        ...err,\n        ref: 'password'\n      });\n    } else if (!account.name.trim()) {\n      return setErr({\n        ...err,\n        ref: 'name'\n      });\n    } else if (!account.email.trim()) {\n      return setErr({\n        ...err,\n        ref: 'email'\n      });\n    }\n\n    // password inputs don't match\n    if (account.password !== account.confirmPassword) {\n      return setErr({\n        ...err,\n        ref: 'password'\n      });\n    }\n\n    const userObj = {\n      name: account.name,\n      email: account.email,\n      password: account.password\n    };\n\n    // check if user already exists\n    const response = await userService.check(userObj);\n\n    if (response.result === 'User is free') {\n\n      await createUser(userObj);\n\n      return setAccount({\n        ...account,\n        created: true\n      });\n\n    } else if (response.result === 'Name exists') {\n      return setErr({\n        ...err,\n        ref: 'name'\n      });\n\n    } else if (response.result === 'Email exists') {\n      return setErr({\n        ...err,\n        ref: 'email'\n      });\n    }\n  }\n\n  if (link.dest === 'welcome') {\n    return (\n      <Route exact path=\"/create\">\n        <Redirect to=\"/\" />\n      </Route>\n    )\n  }\n\n  return (\n    <div className=\"create-parent-container\">\n      {\n        account.created ?\n          <Route exact path=\"/create\">\n            <Redirect to=\"/terms\" />\n          </Route>\n          : <div className=\"create-form-container\">\n            <div className=\"btns-container\">\n              <button className=\"dest-btns dashboard-route-btn\" onClick={() => setDest('welcome')}>Return to Login</button>\n            </div>\n\n            <span className=\"create-header\">Create Your Account</span>\n            \n            <div className=\"create-user-container\">\n              <form onSubmit={handleSubmit} id=\"create-user-form\">\n                <label className=\"create-input-label\">Username:</label>\n                <input \n                  style={{ border: err.ref === 'name' ? '2px solid red' : 'none' }}\n                  type=\"text\"\n                  name=\"name\"\n                  value={account.name}\n                  onChange={handleChange}\n                  className=\"create-input\"\n                />\n\n                <label className=\"create-input-label\">Email:</label>\n                <input \n                  style={{ border: err.ref === 'email' ? '2px solid red' : 'none' }}\n                  type=\"email\"\n                  minLength={3}\n                  name=\"email\"\n                  value={account.email}\n                  onChange={handleChange}\n                  className=\"create-input\"\n                />\n\n                <label className=\"create-input-label\">Password:</label>\n                <input\n                  style={{ border: err.ref === 'password' ? '2px solid red' : 'none' }} \n                  type=\"password\"\n                  name=\"password\"\n                  value={account.password}\n                  onChange={handleChange}\n                  className=\"create-input\"\n                />\n\n                <label className=\"create-input-label\">Confirm Password:</label>\n                <input \n                  style={{ border: err.ref === 'password' ? '2px solid red' : 'none' }}\n                  type=\"password\"\n                  minLength={5}\n                  maxLength={31}\n                  name=\"confirmPassword\"\n                  value={account.confirmPassword}\n                  onChange={handleChange}\n                  className=\"create-input\"\n                />\n                <button className=\"create-user-btn\">Create User</button>\n              </form>\n            </div>\n          </div>\n      }\n    </div>\n  );\n}\n\nexport default CreateUser;\n","/home/bzweb/projects/custom/mindful/frontend/src/components/Settings.js",[],"/home/bzweb/projects/custom/mindful/frontend/src/components/dashboard/RecApps.js",[],"/home/bzweb/projects/custom/mindful/frontend/src/components/dashboard/RecVideos.js",[],"/home/bzweb/projects/custom/mindful/frontend/src/components/dashboard/Timer.js",["102"],"import React, { useState, useEffect, useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { UserContext } from '../../contexts/UserContext';\n\nimport './timer.css';\n\nimport chimeSrc from '../../audio/chime.mp3';\nconst chimeSound = new Audio(chimeSrc);\n\nconst Timer = () => {\n  const { user, link, setDest } = useContext(UserContext);\n\n  const [timer, setTimer] = useState({\n    seconds: 0,\n    minutes: 0,\n    hours: 0,\n    countdown: false,\n  });\n\n  useEffect(() => {\n    chimeSound.load();\n      chimeSound.currentTime = 0;\n\n    if (!timer.countdown) return;\n\n    adjustInput();\n\n    const meditation = setTimeout(() => {\n      if (timer.seconds === 0) {\n\n        if (timer.minutes === 0) {\n\n          if (timer.hours === 0) {\n            chimeSound.play();\n          } else {\n            setTimer({\n              ...timer,\n              seconds: 59,\n              minutes: 59,\n              hours: timer.hours - 1\n            });\n          }\n\n        } else {\n          setTimer({\n            ...timer,\n            seconds: 59,\n            minutes: timer.minutes - 1\n          });\n        }\n      } else {\n        setTimer({\n          ...timer,\n          seconds: timer.seconds - 1\n        });\n      }\n    }, 1000);\n\n    return () => clearTimeout(meditation);\n  }, [timer]);\n\n  if (!user.accessToken) {\n    return (\n      <Route exact path=\"/timer\">\n        <Redirect to=\"/\" />\n      </Route>\n    )\n  }\n\n  if (link.dest === 'dashboard') {\n    return (\n      <Route exact path=\"/timer\">\n        <Redirect to=\"/dashboard\" />\n      </Route>\n    )\n  }\n\n  if (link.dest === 'entry') {\n    return (\n      <Route exact path=\"/timer\">\n        <Redirect to=\"/entry\" />\n      </Route>\n    )\n  }\n\n  const adjustInput = () => {\n    if ((timer.seconds * 1) > 59) {\n      setTimer({\n        ...timer,\n        seconds: 59\n      });\n    }\n    \n    if ((timer.minutes * 1) > 59) {\n      setTimer({\n        ...timer,\n        minutes: 59\n      });\n    }\n    \n    if ((timer.hours * 1) > 5) {\n      setTimer({\n        ...timer,\n        hours: 5\n      });\n    }\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    setTimer({\n      ...timer,\n      countdown: true\n    });\n  }\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    if (value % 2 !== 0 && value % 2 !== 1) return;\n\n    setTimer({\n      ...timer,\n      [name]: value\n    });\n  }\n\n  const pauseTimer = () => {\n    setTimer({\n      ...timer,\n      countdown: false\n    });\n  }\n\n  const resetTimer = () => {\n    setTimer({\n      ...timer,\n      seconds: 0,\n      minutes: 0,\n      hours: 0,\n      countdown: false\n    });\n  }\n\n  return (\n    <div className=\"timer-container\">\n      <div className=\"btns-container\">\n        <button className=\"dest-btns dashboard-route-btn\" onClick={() => setDest('dashboard')}>Return to Dashboard</button>\n        <button className=\"dest-btns entry-route-btn\" onClick={() => setDest('entry')}>Boost Mindfulness</button>\n      </div>\n\n      <div className=\"timer-form\">\n        <form onSubmit={handleSubmit}>\n          <input \n            type=\"text\"\n            name=\"hours\"\n            value={timer.hours}\n            onChange={handleChange}\n            placeholder=\"00\"\n            className=\"timer-input\"\n          />\n          <span className=\"timer-char\">h</span>\n\n          <input \n            type=\"text\"\n            name=\"minutes\"\n            value={timer.minutes}\n            onChange={handleChange}\n            placeholder=\"00\"\n            className=\"timer-input\"\n          />\n          <span className=\"timer-char\">m</span>\n\n          <input \n            type=\"text\"\n            name=\"seconds\"\n            value={timer.seconds}\n            onChange={handleChange}\n            placeholder=\"00\"\n            className=\"timer-input\"\n          />\n          <span className=\"timer-char\">s</span>\n\n          <button id=\"start-btn\">Start Timer</button>\n        </form>\n        <div className=\"timer-btns-container\">\n          <button onClick={pauseTimer} id=\"pause-btn\">Pause Timer</button>\n          <button onClick={resetTimer} id=\"reset-btn\">Reset Timer</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Timer;\n","/home/bzweb/projects/custom/mindful/frontend/src/components/dashboard/Info.js",[],"/home/bzweb/projects/custom/mindful/frontend/src/components/dashboard/Dashboard.js",[],"/home/bzweb/projects/custom/mindful/frontend/src/components/dashboard/EntryForm.js",["103"],"import React, { useState, useEffect, useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { UserContext } from '../../contexts/UserContext';\nimport Entry from './Entry';\nimport Modal from './Modal';\nimport { entries } from '../../modules/entries';\nimport './entry.css';\n\nconst EntryForm = () => {\n  const { user, dispatch, updateEntries, link, setDest } = useContext(UserContext);\n\n  const [entry, setEntry] = useState({\n    text: '',\n    obj: '',\n    selected: false,\n  });\n\n  let entryIndex;\n\n  useEffect(() => {\n    if (entry.selected) return;\n\n    entryIndex = user.entries >= 2\n      ? Math.floor(Math.random() * entries.length)\n      : user.entries;\n    \n    setEntry({\n      ...entry,\n      obj: entries[entryIndex]\n    });\n  }, []);\n\n  const [modalState, setModalState] = useState({ show: false });\n\n  if (!user.accessToken) {\n    return (\n      <Route exact path=\"/entry\">\n        <Redirect to=\"/\" />\n      </Route>\n    )\n  }\n\n  if (link.dest === 'dashboard') {\n    return (\n      <Route exact path=\"/entry\">\n        <Redirect to=\"/dashboard\" />\n      </Route>\n    )\n  }\n\n  const openModal = () => {\n    setModalState({\n      ...modalState,\n      show: true\n    });\n  }\n\n  const closeModal = () => {\n    setModalState({\n      ...modalState,\n      show: false\n    });\n\n    return setDest('dashboard');\n  }\n\n  const handleChange = event => {\n    setEntry({\n      ...entry,\n      text: event.target.value\n    });\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (!entry.text.trim()) return;\n\n    const count = user.entries + 1;\n\n    const tempText = { input: entry.text };\n    \n    const tempCount = user.tempCount + 1;\n    \n    // update number of entries completed\n    dispatch({ type: 'COMPLETE_ENTRY', user: {\n      entries: user.entries + 1,\n      tempText,\n      tempCount \n    }});\n\n    setEntry({\n      ...entry,\n      completed: true\n    });\n    \n    // update database info\n    updateEntries(count);\n\n    openModal();\n  }\n\n  return (\n    <div className=\"entry-container\">\n      <div className=\"btns-container\">\n        <button className=\"dest-btns dashboard-route-btn\" onClick={() => setDest('dashboard')}>Return to Dashboard</button>\n      </div>\n\n      <div className=\"form-container\">\n        <form onSubmit={handleSubmit} className=\"entry-form\">\n          <Entry entry={entry} />\n          <textarea \n            value={entry.text}\n            id=\"entry-input\"\n            onChange={handleChange}\n            rows={10}\n            cols={50}\n          />\n          <button className=\"submit-btn toggle-button\">Complete Entry</button>\n        </form>\n\n        <Modal modalState={modalState} closeModal={closeModal} />\n      </div>\n    </div>\n  );\n}\n\nexport default EntryForm;\n","/home/bzweb/projects/custom/mindful/frontend/src/components/dashboard/Entry.js",[],"/home/bzweb/projects/custom/mindful/frontend/src/components/dashboard/Modal.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":20},{"ruleId":"112","severity":1,"message":"113","line":76,"column":1,"nodeType":"114","endLine":84,"endColumn":2},{"ruleId":"108","severity":1,"message":"115","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":20},{"ruleId":"104","replacedBy":"116"},{"ruleId":"106","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":33,"column":6,"nodeType":"120","endLine":33,"endColumn":20,"suggestions":"121"},{"ruleId":"118","severity":1,"message":"122","line":60,"column":6,"nodeType":"120","endLine":60,"endColumn":13,"suggestions":"123"},{"ruleId":"118","severity":1,"message":"124","line":23,"column":18,"nodeType":"125","endLine":25,"endColumn":21},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useHistory' is defined but never used.",["126"],["127"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'setDest'. Either include them or remove the dependency array.","ArrayExpression",["128"],"React Hook useEffect has a missing dependency: 'adjustInput'. Either include it or remove the dependency array.",["129"],"Assignments to the 'entryIndex' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ConditionalExpression","no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [history, locationKeys, setDest]",{"range":"134","text":"135"},"Update the dependencies array to be: [adjustInput, timer]",{"range":"136","text":"137"},[941,955],"[history, locationKeys, setDest]",[1300,1307],"[adjustInput, timer]"]